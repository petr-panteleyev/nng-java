plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id 'java'
    id 'maven-publish'
}

java {
    sourceCompatibility = 11
    targetCompatibility = 11
}

group 'io.sisu'
// Given the versioning pattern x.x.x-y-z, the plan is x.x.x follows the
// expected version of nng supported. The y is the major release of this
// library against that version and z is the patch release of the major.
// Yes, it's a bit ugly, but it follows some conventions blessed by
// Oracle:
// https://docs.oracle.com/middleware/1212/core/MAVEN/maven_version.htm#MAVEN8904
version '1.8.0-0-1'

repositories {
    mavenCentral()
    maven {
        name = "GithubPackages"
        url = "https://maven.pkg.github.com/voutilad/nng-java"
        credentials {
            username = System.getenv("GITHUB_ACTOR")
            password = System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    implementation 'net.java.dev.jna:jna:5.14.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

task getVersion {
    System.out.println("${project.version}")
}

project(':benchmarks') {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'
    java {
        sourceCompatibility = 11
        targetCompatibility = 11
    }
    group = 'io.sisu.nng'
    version = parent.version

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation rootProject
        implementation 'net.java.dev.jna:jna:5.14.0'
    }

    jar {
        manifest {
            attributes 'Description': 'Some (contrived) benchmarks of NNG-Java'
        }
    }
}

project(':demo') {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'
    java {
        sourceCompatibility = 11
        targetCompatibility = 11
    }
    group = 'io.sisu.nng'
    version = parent.version

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation rootProject
    }

    jar {
        manifest {
            attributes 'Description': 'Some demonstrations of NNG-Java'
        }
    }

    task runDemoAsyncServer(type: JavaExec) {
        group = "Execution"
        description = "Run the Async Server demo"
        classpath = sourceSets.main.runtimeClasspath
        mainClass = $/io.sisu.nng.demo.async.Server/$
        environment "JNA_LIBRARY_PATH", System.getenv("JNA_LIBRARY_PATH")
    }

    task runDemoAsyncClient(type: JavaExec) {
        group = "Execution"
        description = "Run the Async Client demo"
        classpath = sourceSets.main.runtimeClasspath
        mainClass = $/io.sisu.nng.demo.async.Client/$
        environment "JNA_LIBRARY_PATH", System.getenv("JNA_LIBRARY_PATH")
    }
}